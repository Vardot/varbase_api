<?php

/**
 * @file
 * Contains varbase_api.install.
 */

use Drupal\Core\Language\LanguageInterface;
use Drupal\Core\Url;
use Vardot\Installer\ModuleInstallerFactory;

/**
 * Implements hook_install().
 */
function varbase_api_install() {

  // Processor for install: in varbase_api.info.yml file.
  ModuleInstallerFactory::installList('varbase_api');

  // Install optional configs.
  ModuleInstallerFactory::importConfigsFromScanedDirectory('varbase_api', '/^field.storage.*\\.(yml)$/i');
  ModuleInstallerFactory::importConfigsFromScanedDirectory('varbase_api', '/^.*(settings.yml)$/i');

  // If the openapi_ui_redoc and jsonapi modules are installed, give the API
  // documentation a nice path alias.
  if (Drupal::service('module_handler')->moduleExists('openapi_ui_redoc')
      && Drupal::service('module_handler')->moduleExists('jsonapi')) {

    $alias_manager = \Drupal::service('path_alias.manager');
    $path = $alias_manager->getPathByAlias('/api-docs');

    if (empty($path)) {
      $route_parameters = [
        'openapi_ui' => 'redoc',
        'openapi_generator' => 'jsonapi',
      ];
      $path_alias = \Drupal::entityTypeManager()->getStorage('path_alias')->create([
        'path' => Url::fromRoute('openapi.documentation', $route_parameters)->toString(),
        'alias' => '/api-docs',
        'langcode' => LanguageInterface::LANGCODE_NOT_SPECIFIED,
      ]);
      $path_alias->save();
    }
  }

  // Add permissions.
  ModuleInstallerFactory::addPermissions('varbase_api');

}

// Load include all updates and apply them.
\Drupal::moduleHandler()->loadInclude('varbase_api', 'inc', 'include/updates/all');
